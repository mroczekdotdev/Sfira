@model PostViewModel

<article class="Post" data-id="@Model.Id">
    <div class="flags">
        @if (Model.FavoritedBy != null)
        {
            <span class="flag favoritedBy"><i class="fas fa-star fa-sm fa-fw"></i> Favorited by @Model.FavoritedBy</span>
        }
    </div>
    <header class="header">
        <a class="user" asp-controller="@UserController.Name" asp-action="@nameof(UserController.Index)" asp-route-userName="@Model.Author.UserName">
            <span class="name">@Model.Author.Name</span><span class="username">@Model.Author.UserName</span>
        </a>
        <span class="timestamp">@Model.PublicationTime.Relative()</span>
    </header>
    <div class="content">
        <div class="top">
            <div class="avatar" sfira-user="@Model.Author" sfira-media="avatar"></div>
            <section class="postActions">
                <span class="major">
                    @{
                        if (!User.Identity.IsAuthenticated)
                        { <a class="action comment" href="javascript:void(0)">
                                <i class="far fa-comment-alt fa-sm fa-fw"></i><span class="counter">@Model.CommentsCount</span>
                            </a>
                        }
                        else if ((@Model.CurrentUserRelation & RelationType.Comment) != RelationType.Comment)
                        {
                            <a class="action comment" href="javascript:void(0)">
                                <i class="far fa-comment-alt fa-sm fa-fw"></i><span class="counter">@Model.CommentsCount</span>
                            </a>
                        }
                        else
                        {
                            <a class="action comment" href="javascript:void(0)">
                                <i class="fas fa-comment-alt fa-sm fa-fw"></i><span class="counter">@Model.CommentsCount</span>
                            </a>
                        }

                        if (!User.Identity.IsAuthenticated)
                        {
                            <span class="action">
                                <i class="far fa-heart fa-sm fa-fw"></i><span class="counter">@Model.LikesCount</span>
                            </span>
                        }
                        else if ((@Model.CurrentUserRelation & RelationType.Like) != RelationType.Like)
                        {
                            <a class="action like" href="javascript:void(0)">
                                <i class="far fa-heart fa-sm fa-fw"></i><span class="counter">@Model.LikesCount</span>
                            </a>
                        }
                        else
                        {
                            <a class="action unlike" href="javascript:void(0)">
                                <i class="fas fa-heart fa-sm fa-fw"></i><span class="counter">@Model.LikesCount</span>
                            </a>
                        }

                        if (!User.Identity.IsAuthenticated)
                        {
                            <span class="action">
                                <i class="far fa-star fa-sm fa-fw"></i><span class="counter">@Model.FavoritesCount</span>
                            </span>
                        }
                        else if ((@Model.CurrentUserRelation & RelationType.Favorite) != RelationType.Favorite)
                        {
                            <a class="action favorite" href="javascript:void(0)">
                                <i class="far fa-star fa-sm fa-fw"></i><span class="counter">@Model.FavoritesCount</span>
                            </a>
                        }
                        else
                        {
                            <a class="action unfavorite" href="javascript:void(0)">
                                <i class="fas fa-star fa-sm fa-fw"></i><span class="counter">@Model.FavoritesCount</span>
                            </a>
                        }
                    }
                </span>
                @*NotImplemented
                    <span class="more">&bull;&bull;&bull;</span>*@
            </section>
        </div>
        <section class="body">
            @Html.Raw(Model.Body.ToHypertext())
        </section>
        @{
            if (Model.Attachment != null)
            {
                <section class="attachment bottom">
                    @(await Component.InvokeAsync<AttachmentViewComponent>(Model.Attachment))
                </section>
            }
        }
        <section class="CommentsFeed"></section>
        @{await Html.RenderPartialAsync("_CommentCreatePartial", new CommentViewModel());}
    </div>
</article>
